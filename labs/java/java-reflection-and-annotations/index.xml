<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IT Ninjas – Java Exercises - Annotationen &amp; Reflection API</title><link>/labs/java/java-reflection-and-annotations/</link><description>Recent content in Java Exercises - Annotationen &amp; Reflection API on IT Ninjas</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/labs/java/java-reflection-and-annotations/index.xml" rel="self" type="application/rss+xml"/><item><title>Labs: Annotationen - Aufgaben</title><link>/labs/java/java-reflection-and-annotations/01_annotations_exercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/labs/java/java-reflection-and-annotations/01_annotations_exercises/</guid><description>
&lt;p>Die folgenden Aufgaben dienen der Vertiefung der beiden Themen Reflection API und Annotations.&lt;/p>
&lt;h2 id="aufgabe-1">Aufgabe 1&lt;/h2>
&lt;p>Implementiere eine eigene Annotation. Die Annotation soll der Dokumentation einer Klasse dienen und
die folgenden Eigenschaften aufweisen:&lt;/p>
&lt;ul>
&lt;li>Verfügbar zur Compile Time&lt;/li>
&lt;li>Verfügbar auf Klassen&lt;/li>
&lt;li>Attribut zur Aufnahme von einem oder mehreren Autoren als String-Array&lt;/li>
&lt;li>Attribut zur Aufnahme einer Beschreibung als String, der Default-Wert soll ein leerer String sein&lt;/li>
&lt;li>Attribut zur Aufnahme einer Version als String, der Default-Wert ist 0.0.1&lt;/li>
&lt;/ul>
&lt;p>Der Name der Annotation soll anhand ihres Zwecks gewählt werden.&lt;/p>
&lt;h2 id="aufgabe-2">Aufgabe 2&lt;/h2>
&lt;p>Implementiere eine sinnvolle Modell-Klasse und wende deine neue Annotation an.
Fülle die Werte für Autor, Beschreibung und Version ab.&lt;/p>
&lt;h2 id="aufgabe-3">Aufgabe 3&lt;/h2>
&lt;p>Implementiere einen Annotations-Prozessor, welcher die oben geschriebene Annotation auf der
Modell-Klasse auswertet.
Die Auswertung soll auf die Kommandozeile erfolgen.&lt;/p>
&lt;h3 id="schritt-1">Schritt 1&lt;/h3>
&lt;p>Implementiere eine neue Klasse, welche die folgende Basis hat:&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">
&lt;span style="color:#a6e22e">@SupportedAnnotationTypes&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#75715e">/*1*/&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#a6e22e">@SupportedSourceVersion&lt;/span>&lt;span style="color:#f92672">(&lt;/span>SourceVersion&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">RELEASE_8&lt;/span>&lt;span style="color:#f92672">)&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">DocumentationProcessor&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> AbstractProcessor &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#a6e22e">@Override&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">boolean&lt;/span> &lt;span style="color:#a6e22e">process&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Set&lt;span style="color:#f92672">&amp;lt;?&lt;/span> &lt;span style="color:#66d9ef">extends&lt;/span> TypeElement&lt;span style="color:#f92672">&amp;gt;&lt;/span> annotations&lt;span style="color:#f92672">,&lt;/span> RoundEnvironment roundEnv&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Füge beim Punkt 1 den kompletten Pfad (Package und Name) deiner Annotation ein.&lt;/p>
&lt;h3 id="schritt-2">Schritt 2&lt;/h3>
&lt;p>Die beiden Parameter annotations und roundEnv werden durch den Annotations-Prozessor benutzt, um
während der Kompilierung die entsprechende Annotation zu erhalten.
Im Set annotations befinden sich alle Annotationen, welche unter Punkt 1 angegeben werden.
Die Klasse RoundEnvironment erlaubt den Zugriff auf alle Elemente während der Kompilierung.
Ergänze die Methode des Annotations-Prozessors mit den folgenden Loops:&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">for&lt;/span>&lt;span style="color:#f92672">(&lt;/span>TypeElement annotation&lt;span style="color:#f92672">:&lt;/span>annotations&lt;span style="color:#f92672">){&lt;/span>
Set&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#66d9ef">extends&lt;/span> Element&lt;span style="color:#f92672">&amp;gt;&lt;/span> annotatedElements &lt;span style="color:#f92672">=&lt;/span> roundEnv&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getElementsAnnotatedWith&lt;/span>&lt;span style="color:#f92672">(&lt;/span>annotation&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">for&lt;/span>&lt;span style="color:#f92672">(&lt;/span>Element element&lt;span style="color:#f92672">:&lt;/span>annotatedElements&lt;span style="color:#f92672">){&lt;/span>
X annotation&lt;span style="color:#f92672">=&lt;/span>element&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getAnnotation&lt;/span>&lt;span style="color:#f92672">(&lt;/span>X&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Die Klasse X kannst du durch deine Annotation ersetzen. Jetzt hast du Zugriff auf die Elemente
deiner Annotation.&lt;/p>
&lt;h3 id="schritt-3">Schritt 3&lt;/h3>
&lt;p>Ergänze die Implementation, um den Klassennamen der Modell-Klasse und die Werte der Annotation
auszudrucken. Hier ein Beispiel, wie der Ausdruck in etwa aussehen könnte:&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">------
Person
------
Model class representing a person with a name and age
[u210148 (Claudio Zesiger)]
0.0.1
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="schritt-4">Schritt 4&lt;/h3>
&lt;p>Kompiliere die Annotation und den Annotations-Prozessor auf der Kommandozeile (Terminal) mit dem
Befehl javac.&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">cd ./src/main/java &lt;span style="color:#75715e"># Befehle funktionieren ab diesem Verzeichnis.&lt;/span>
javac ./&amp;lt;path/to/my&amp;gt;/&amp;lt;Annotation&amp;gt;.java &amp;lt;path/to/my&amp;gt;/&amp;lt;AnnotationProcessor&amp;gt;.java
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Ersetze die Pfade und die Namen der Annotation/des Annotations-Prozessors mit deinen Angaben.&lt;/p>
&lt;h3 id="schritt-5">Schritt 5&lt;/h3>
&lt;p>Kompiliere die implementierte Modell-Klasse mit dem folgenden Befehl:&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-shell" data-lang="shell">javac -processor &amp;lt;package&amp;gt;.&amp;lt;AnnotationsProcessor&amp;gt; &amp;lt;path/to/my&amp;gt;&amp;lt;ModelKlasse&amp;gt;.java
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Die Ausgabe auf die Kommandozeile durch den Annotations-Prozessor sollte anschliessend angezeigt werden.&lt;/p></description></item><item><title>Labs: Reflection API - Aufgaben</title><link>/labs/java/java-reflection-and-annotations/02_reflection_exercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/labs/java/java-reflection-and-annotations/02_reflection_exercises/</guid><description>
&lt;p>Die folgende Aufgabe dient der Vertiefung der beiden Themen Reflection API und Annotations.&lt;/p>
&lt;h2 id="aufgabe-1">Aufgabe 1&lt;/h2>
&lt;p>Implementiere eine Klasse &lt;em>Person&lt;/em> mit den Attributen Namen und Alter.
Die Klasse muss einen Konstruktor mit beiden Attributen aufweisen. Für beide Attribute muss eine
Get-Methode implementiert werden.&lt;br>
Implementiere zudem eine toString Methode.&lt;/p>
&lt;h2 id="aufgabe-2">Aufgabe 2&lt;/h2>
&lt;p>Implementiere eine eigene Annotation. Die Annotation soll der Auffindung der Klasse zur Erzeugung
von Instanzen der oben genannten Klasse dienen und die folgenden Eigenschaften aufweisen:&lt;/p>
&lt;ul>
&lt;li>Verfügbar zur Laufzeit&lt;/li>
&lt;li>Verfügbar auf Klassen&lt;/li>
&lt;/ul>
&lt;p>Der Name der Annotation soll anhand ihres Zwecks gewählt werden. Die Annotation hat keine Attribute.&lt;/p>
&lt;h2 id="aufgabe-3">Aufgabe 3&lt;/h2>
&lt;p>Implementiere eine weitere Annotation. Die Annotation soll der Angabe von Daten für Personen dienen.
Sie muss die folgenden Eigenschaften aufweisen:&lt;/p>
&lt;ul>
&lt;li>Verfügbar zur Laufzeit&lt;/li>
&lt;li>Verfügbar auf Konstruktoren&lt;/li>
&lt;li>Attribut für die Namen von Personen als String-Array&lt;/li>
&lt;li>Attribut für das Alter von Personen als Integer-Array&lt;/li>
&lt;/ul>
&lt;h2 id="aufgabe-4">Aufgabe 4&lt;/h2>
&lt;p>Wende die beiden Annotationen auf deine Person-Klasse an. Eine auf der Klasse, die Andere auf dem
Konstruktor.&lt;br>
Die Annotation auf dem Konstruktor muss mindestens drei Namen und drei Altersangaben aufweisen.&lt;/p>
&lt;h2 id="aufgabe-5">Aufgabe 5&lt;/h2>
&lt;p>Implementiere eine Main-Klasse mit einer Main-Methode und nutze Reflection, um Instanzen anhand der
Konstruktor-Annotation zu erzeugen. Gehe dabei wie folgt vor:&lt;/p>
&lt;ul>
&lt;li>Hol dir eine Klasseninstanz über den Package- und Klassennamen oder über das statische Feld class&lt;/li>
&lt;li>Hol dir auf der Klasseninstanz den Konstruktor&lt;/li>
&lt;li>Hol dir vom Konstruktor die Annotation&lt;/li>
&lt;li>Hol aus der Annotation die Namen und Altersangaben&lt;/li>
&lt;li>Nutze die Angaben in einem Loop, um entsprechend viele Instanzen der Klasse Person zu erzeugen&lt;/li>
&lt;li>Drucke die Angaben der Personen auf der Kommandozeile aus&lt;/li>
&lt;/ul></description></item></channel></rss>