<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IT Ninjas – Java Exercises - Exception Handling</title><link>/labs/java/exception-handling/</link><description>Recent content in Java Exercises - Exception Handling on IT Ninjas</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/labs/java/exception-handling/index.xml" rel="self" type="application/rss+xml"/><item><title>Labs: Exception Handling - Aufgaben</title><link>/labs/java/exception-handling/01_exercises/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/labs/java/exception-handling/01_exercises/</guid><description>
&lt;p>Die folgenden Aufgaben bestehen zum Teil aus Exception Handling. Behandle die Exception also auch so, wie es in der Theorie erklärt wurde.&lt;/p>
&lt;h2 id="aufgabe-1-file-reader">Aufgabe 1: File Reader&lt;/h2>
&lt;p>&lt;a href="https://github.com/dwyl/english-words/raw/master/words.txt">Hier&lt;/a> findest du eine Datei, welche eine Liste mit ungefähr 466 Tausend englischen Wörtern enthält.&lt;/p>
&lt;p>Schreibe eine Anwendung welche diese Wörter einlesen kann und schreibe jeweils eine Methode für die folgende Aufgaben:&lt;/p>
&lt;ul>
&lt;li>Zähle alle Wörter in dieser Liste&lt;/li>
&lt;li>Zähle alle Wörter, welche den Buchstaben Q benutzen&lt;/li>
&lt;li>Gib alle Sonderzeichen zurück, welche in der Liste vorkommen (jedes Zeichen wird nur einmal zurückgegeben)&lt;/li>
&lt;li>2 weitere Methoden deiner Wahl&lt;/li>
&lt;/ul>
&lt;p>Implementiere vorher ein Interface, um deine Methoden zu definieren.&lt;/p>
&lt;h2 id="aufgabe-2-file-writing">Aufgabe 2: File Writing&lt;/h2>
&lt;p>Die Verwendung von System.out.println() hat das Problem, dass nach einem Neustart der Applikation alle Logs aus der Konsole verschwinden, dies kann mit der Zeit mühsam werden.
Schreibe eine Klasse mit mindestens einer öffentlichen Methode, welcher man einen Text als Parameter gibt. Die Methode soll diesen Text zuerst in eine Datei mit dem Namen application.log speichern und nachher mit System.out.println() in die Konsole schreiben. Achte auch hier wieder auf ein entsprechendes Exception Handling.&lt;/p>
&lt;h2 id="aufgabe-3-parseint">Aufgabe 3: ParseInt&lt;/h2>
&lt;p>Wenn wir Zahlen von einem User über die Konsole entgegennehmen wollen, kann man scanner.nextLine() brauchen. Wir können aber nie sicher sein, ob es sich bei der Eingabe wirklich um eine Zahl handelt. Darum müssen wir mit einem Exception Handling die Programmlogik vor einem solchen Fall schützen.&lt;/p>
&lt;p>Schreibe eine Anwendung, welche den User einzeln für zwei Zahlen fragt und diese dann entweder addiert, subtrahiert, multipliziert, oder dividiert. Die Auswahl der Rechnungsmethode kann zufällig oder durch den Benutzer erfolgen.&lt;/p></description></item></channel></rss>