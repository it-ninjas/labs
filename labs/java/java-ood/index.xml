<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>IT Ninjas – Java Exercises - OOD</title><link>/labs/java/java-ood/</link><description>Recent content in Java Exercises - OOD on IT Ninjas</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/labs/java/java-ood/index.xml" rel="self" type="application/rss+xml"/><item><title>Labs: Zoo</title><link>/labs/java/java-ood/01_zoo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/labs/java/java-ood/01_zoo/</guid><description>
&lt;p>Modelliere* einen Klassenaufbau für einen Zoo. Folgende Klassen sollen enthalten sein:&lt;/p>
&lt;ul>
&lt;li>Personen&lt;/li>
&lt;li>Gehege&lt;/li>
&lt;li>Tiere&lt;/li>
&lt;/ul>
&lt;p>Jede dieser Klassen soll mehrere Spezialisierungen enthalten.&lt;/p>
&lt;blockquote>
&lt;p>*Modelliere bedeutet in diesem Zusammenhang, dass du nur den Aufbau mittels Klassen darstellen musst. Es wird keine Funktionalität gefordert.&lt;/p>
&lt;/blockquote>
&lt;p>Bei den Personen wird zwischen Mitarbeitern und Mitgliedern unterschieden.
Ein Mitarbeiter hat beispielsweise einen Lohn, welcher ein Mitglied nicht hat.
Die folgenden Attribute sollen vorhanden sein:&lt;/p>
&lt;ul>
&lt;li>Lohn&lt;/li>
&lt;li>Beschreibung des Jobs&lt;/li>
&lt;li>Telefonnummer&lt;/li>
&lt;li>Mitglied seit&lt;/li>
&lt;li>Nummer der Mitglied-Karte&lt;/li>
&lt;/ul>
&lt;p>Verteile die Attribute also korrekt auf die Generalisierung und die Spezialisierungen.&lt;/p>
&lt;p>Bei den Gehegen wird unterschieden zwischen Gelände, Terrarium, Aquarium und Käfig.
Die einzigartigen Eigenschaften der verschiedenen Gehege sollen wie folgt modelliert werden:&lt;/p>
&lt;ul>
&lt;li>Gehege-Nummer&lt;/li>
&lt;li>Grösse in Quadratmeter&lt;/li>
&lt;li>Temperatur&lt;/li>
&lt;li>Feuchtigkeit&lt;/li>
&lt;li>Süss- / Salzwasser&lt;/li>
&lt;li>Fassungsvermögen&lt;/li>
&lt;li>Zaunhöhe&lt;/li>
&lt;li>Wassergraben vorhanden&lt;/li>
&lt;/ul>
&lt;p>Verteile die Attribute also korrekt auf die Generalisierung und die Spezalisierung.
Selbstverständlich kann ein Gehege auch von einem anderen abgeleitet werden.&lt;/p>
&lt;p>Bei den Tieren könnt ihr selber entscheiden, welche Tiere euer Zoo enthalten soll und wie diese auf die Gehege verteilt werden.&lt;br>
Falls ihr keine Ideen habt, gibt es hier ein paar Beispiele:&lt;/p>
&lt;ul>
&lt;li>Landtiere&lt;/li>
&lt;li>Amphibien&lt;/li>
&lt;li>Wassertiere&lt;/li>
&lt;li>Vögel&lt;/li>
&lt;/ul>
&lt;p>oder&lt;/p>
&lt;ul>
&lt;li>Aufteilung nach Spezies wie Insekten, Säugetiere, Wirbeltiere, Reptilien&lt;/li>
&lt;/ul>
&lt;p>oder&lt;/p>
&lt;ul>
&lt;li>Aufteilung nach Ernährung (Fleischfresser, Pflanzenfresser, Allesfresser :-))&lt;/li>
&lt;/ul>
&lt;p>Der Zoo hat also Mitarbeiter und Mitglieder und verschiedene Tiere, die in verschiedenen Gehegen leben.
Die Beziehung zwischen den einzelnen Klassen wie dem Zoo seinen Gehegen und Tieren soll sich an der realen Welt orientieren.&lt;/p>
&lt;p>&lt;strong>Info:&lt;/strong> Bei dieser Aufgabe darf man &lt;strong>NICHT&lt;/strong> gebrauch von Lombok machen.&lt;/p>
&lt;hr>
&lt;p>Hier kannst du &lt;a href="../../../../docs/java/java-ood">zurück zur Theorie&lt;/a>.&lt;/p></description></item><item><title>Labs: Bibliothek</title><link>/labs/java/java-ood/02_bibliothek/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/labs/java/java-ood/02_bibliothek/</guid><description>
&lt;p>Schreibe eine Anwendung, welche eine Bibliothek modelliert.
In der Bibliothek findet man unterschiedliche Exemplare. z.B: Bücher, Zeitschriften, CDs, DVDs.&lt;/p>
&lt;p>Ein Item&lt;/p>
&lt;ul>
&lt;li>hat einen Titel&lt;/li>
&lt;/ul>
&lt;p>Folgende Arten von Items können sich in der Bibliothek befinden:&lt;/p>
&lt;ul>
&lt;li>Buch
&lt;ul>
&lt;li>hat einen Autor&lt;/li>
&lt;li>hat ein Genre&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Zeitschrift
&lt;ul>
&lt;li>hat einen Herausgeber&lt;/li>
&lt;li>hat ein Datum&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CD
&lt;ul>
&lt;li>hat den Namen des Interpreten&lt;/li>
&lt;li>hat eine Anzahl von Songs&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>DVD
&lt;ul>
&lt;li>hat den Namen des Regisseurs&lt;/li>
&lt;li>hat ein Genre&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h4 id="die-anwendung-soll">Die Anwendung soll&lt;/h4>
&lt;ul>
&lt;li>ein Inventar von unterschiedlichen Items verwalten (also Bücher, DVDs usw.)&lt;/li>
&lt;li>es ermöglichen ein Item auszuleihen, wenn es noch nicht ausgeliehen worden ist&lt;/li>
&lt;li>es ermöglichen ein Item zurückzugeben&lt;/li>
&lt;li>Auskunft zu den vorhandenen Items im Inventar geben&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Info:&lt;/strong> Bei dieser Aufgabe darf man &lt;strong>NICHT&lt;/strong> Gebrauch von Lombok machen.&lt;/p>
&lt;p>&lt;em>Es soll kein Scanner eingesetzt werden.&lt;/em>&lt;/p>
&lt;hr>
&lt;p>Hier kannst du &lt;a href="../../../../docs/java/java-ood">zurück zur Theorie&lt;/a>.&lt;/p></description></item><item><title>Labs: Vehicles</title><link>/labs/java/java-ood/03_vehicles/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/labs/java/java-ood/03_vehicles/</guid><description>
&lt;p>Entwirf ein Fahrzeugverwaltungssystem für ein Autohaus.&lt;/p>
&lt;p>Das Fahrzeugverwaltungssystem soll die Verwaltung von verschiedenen Fahrzeugtypen wie Autos, Lastwagen, Motorrädern. ermöglichen.
Jedes Fahrzeug soll eine eindeutige Fahrzeugidentifikationsnummer (VIN) haben.&lt;/p>
&lt;p>Jedes Fahrzeug verfügt über folgende Eigenschaften:&lt;/p>
&lt;ul>
&lt;li>Fahrzeugtyp (Auto, Lastwagen, Motorrad)&lt;/li>
&lt;li>Marke&lt;/li>
&lt;li>Modell&lt;/li>
&lt;li>Farbe&lt;/li>
&lt;li>Baujahr&lt;/li>
&lt;li>Preis&lt;/li>
&lt;li>Verfügbarkeit (ob das Fahrzeug zum Verkauf steht oder nicht)&lt;/li>
&lt;/ul>
&lt;p>Das Auto hat zudem:&lt;/p>
&lt;ul>
&lt;li>Type (Familienauto, Sportauto etc.)&lt;/li>
&lt;li>Anzahl Sitze&lt;/li>
&lt;li>Stauraum im Kofferraum in m^2&lt;/li>
&lt;/ul>
&lt;p>Der Lastwagen hat zudem:&lt;/p>
&lt;ul>
&lt;li>mit Anhänger&lt;/li>
&lt;li>Ladefläche&lt;/li>
&lt;/ul>
&lt;p>Das Motorrad hat zudem:&lt;/p>
&lt;ul>
&lt;li>Fahrzeugklasse (Sportmotorrad, Cruiser, Touring)&lt;/li>
&lt;/ul>
&lt;p>Das Fahrzeugverwaltungssystem soll die folgenden Funktionen unterstützen:&lt;/p>
&lt;ul>
&lt;li>Hinzufügen eines neuen Fahrzeugs zum Inventar des Autohauses.&lt;/li>
&lt;li>Aktualisieren der Details eines vorhandenen Fahrzeugs (z. B. Preisänderung, Verfügbarkeitsstatus, Ausstattungsmerkmale hinzufügen/entfernen).&lt;/li>
&lt;li>Entfernen eines Fahrzeugs aus dem Inventar, wenn es verkauft wurde oder nicht mehr verfügbar ist.&lt;/li>
&lt;li>Anzeigen einer Liste aller verfügbaren Fahrzeuge zum Verkauf.&lt;/li>
&lt;li>Reservierung eines Fahrzeugs für einen Kunden, bevor der endgültige Kauf abgeschlossen ist.&lt;/li>
&lt;li>Verkauf eines reservierten Fahrzeugs und Aktualisierung des Bestands.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Info:&lt;/strong> Ab diesem Lab darf, für alles folgenden Labs/Exams, Lombok verwendet werden, wenn man möchte.&lt;/p>
&lt;hr>
&lt;p>Hier kannst du &lt;a href="../../../../docs/java/java-ood">zurück zur Theorie&lt;/a>.&lt;/p></description></item><item><title>Labs: Shop</title><link>/labs/java/java-ood/04_shop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/labs/java/java-ood/04_shop/</guid><description>
&lt;p>Erstelle ein System für ein Online-Handelshaus, das Produkte aus verschiedenen Kategorien verkauft.
Das System soll die Verwaltung von Produkten, Kunden und Bestellungen ermöglichen.&lt;/p>
&lt;p>Produkt:&lt;/p>
&lt;ul>
&lt;li>eindeutige Produkt-ID&lt;/li>
&lt;li>Namen&lt;/li>
&lt;li>Preis&lt;/li>
&lt;li>Kategorie&lt;/li>
&lt;li>Verfügbarkeitsstatus.&lt;/li>
&lt;/ul>
&lt;p>Produkte können verschiedenen Kategorien angehören, z.B. Elektronik, Kleidung, Bücher usw.
Das System sollte in der Lage sein, verschiedene Arten von Produkten zu verwalten, z.B. Elektronikprodukte (Handys, Laptops), Kleidungsstücke (T-Shirts, Hosen), Bücher (Romane, Fachbücher) usw.&lt;/p>
&lt;p>Kunde:&lt;/p>
&lt;ul>
&lt;li>eindeutige Kunden-ID&lt;/li>
&lt;li>Namen&lt;/li>
&lt;li>E-Mail-Adresse&lt;/li>
&lt;li>Lieferadresse.&lt;/li>
&lt;/ul>
&lt;p>Kunden können Produkte kaufen, indem sie Bestellungen aufgeben.&lt;/p>
&lt;p>Bestellung:&lt;/p>
&lt;ul>
&lt;li>eindeutige Bestellnummer&lt;/li>
&lt;li>die Produkte, welche gekauft wurden&lt;/li>
&lt;li>Gesamtpreis&lt;/li>
&lt;li>Kunden, welcher die Bestellung aufgegeben hat&lt;/li>
&lt;li>Bestellstatus.&lt;/li>
&lt;/ul>
&lt;p>Kunden können mehrere Produkte in einer Bestellung kaufen.&lt;/p>
&lt;p>Das System sollte folgende Funktionen unterstützen:&lt;/p>
&lt;ul>
&lt;li>Hinzufügen, Aktualisieren und Entfernen von Produkten.&lt;/li>
&lt;li>Anzeigen aller Produkte in einer bestimmten Kategorie.&lt;/li>
&lt;li>Hinzufügen, Aktualisieren und Entfernen von Kunden.&lt;/li>
&lt;li>Anzeigen aller Bestellungen eines bestimmten Kunden.&lt;/li>
&lt;li>Aufgeben einer neuen Bestellung für einen Kunden.&lt;/li>
&lt;li>Aktualisieren des Bestellstatus für eine Bestellung.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;p>Hier kannst du &lt;a href="../../../../docs/java/java-ood">zurück zur Theorie&lt;/a>.&lt;/p></description></item></channel></rss>